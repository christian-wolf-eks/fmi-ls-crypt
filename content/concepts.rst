Common Concepts
###############

General description (non-normative)
===================================

This section is non-normative.
It should help to understand the generic idea of this layered standard.

In order to establish trust in the authenticity of the FMU, all files in the zipped FMU archive need to be genuine.
To establish trust in the authenticity of the files, all files are hashed using a cryptographic hash functions.
The hashes are stored in a mapping from the file name to the corresponding hash.
Using the hash table, the importer can check the individual files for unintended modifications.

Additionally, the hash mapping can be hashed itself.
The overall hash can then be signed cryptographically.
By this, any change in the hashes (and the overall hash) can be cryptographically detected.
Additionally, the cryptographic signature can be used to only validate these FMUs that are to be trusted.

The trust in the FMUs have to base on a common trust anchor.
A standard approach known from other domains are x509 certificates [IEC9594]_.
These can be used to validate the signature generated by the hashes.

Optionally, the FMU provider can offer an HTTP endpoint to fetch a certificate revocation list (CRL).


Storing of cryptographic information
=====================================

In accordance with the :ref:`introduction on the cryptographic chain file <crypto-file>`, the chain file ``crypto.xml`` must hold all data to establish trust in the FMU.

The XML file must have one root XML tag ``fmu-signature``.
This tag must have one attribute ``version`` which must be a string.
Only version 1.0 must be accepted by the importer.
Of the version is higher, the importer should issue a warning to the user that the software is outdated and the FMU cannot be verified correctly.

The ``fmu-signature`` tag must have the tags ``individual-hashes``, ``total-hash``, and ``signatures`` each exactly once.

- The content of the ``individual-hashes`` tag will be described in the section :ref:`hashing`.
- The ``total-hash`` tag must have an empty content but an attribute ``hash``.
  The attribute value is described in :ref:`total-hash`.
- The content of the ``signatures`` tag is described in section :ref:`signatures`.

.. note:: Example of a ``crypt.xml`` file structure

    .. code-block:: xml

        <?xml version="1.0" encoding="UTF-8"?>
        <fmu-signatue version="1.0">
            <individual-hashes>...</individual-hashes>
            <total-hash hash="..." />
            <signatures>...</signatures>
        </fmu-signature>

