Cryptography and trust anchor
#############################

.. note:: Should we allow only cert based/PKI approach or also web of trust? Does it even make a difference here?

This layered standard allows to use multiple signatures at the same time.
If one of the signatures validate, the FMU must be considered valid.



Public Key Infrastructure (PKI)
===============================

.. note:: 
    The [IEC9594]_ is the standardized way to handle certificates.
    This is typically done my means of a so called public key infrastructure.

    The base idea is to create a chain of certificates.
    Each certificate is signed by its parent certificate.
    As a result, a tree of certificates is created.
    The leaf certificates are the actual certificates that are used for whatever task at hand.
    The intermediate certificates are mainly for deployment and management purposes.

    The root certificate is the parent of all other certificates of a tree.
    In order to trust a certain certificate, the user must trust the root certificate.
    Once trust in the root certificate is established, the user can follow the chain of certificates and check the certificates for valid signatures.
    That way, the user can establish trust in a cryptographic way in any leaf certificate when trusting the root certificate.

    Typically, the root certificate are generated by official agencies of institutions called Root Certificate Autority (Root CA).
    These root certificates are installed statically into the software or even the operating system.
    In order to obtain a certain certificate one must authenticate and provide authorization to a root CA.
    The root CA will then issue a signed certificate.
    Intermediate certificates are called intermediate CAs.
    They have two main use cases:

    - Technical to keep root private key protected:
      The root certificate's private key is very vulnerable.
      To avoid compromizing it, it is typically managed in an air-gapped system.
      To allow for live and easy certificate generation, a single intermediate CA is used by root CAs to sign the actual certificates.
    - Per organization (unit) certificates:
      One benefit of the structured certificate creation and verification process is that it can be somewhat decentralized.
      Each company can create a local intermediate CA.
      Of course, the root CA must only sign the intermediate CA if the company is to be trusted.
      (Using x509 extensions a certain restriction can be imposed but this is not part of this layered standard.)
      This way, the organization can issue certificates for their own usage.
      For example, a component supplier could create certificates for all generated FMUs and use them to sign the FMUs individually.

Storage in the cryptogrphic chain file
--------------------------------------

All certificates must be stored in PEM format.
The header and footer lines must be dropped.

A single chain of certificates must be provided in the :ref:`certificate chain file <crypto-file>` as an XML tag ``x509-chain``.

Each certificate in the certificate chain must be enclosed in a ``chain-link`` XML tag.
In the ``chain-link`` tag, only the content of the certificate must be provided.

The ``chain-link`` entries must be provided in the order of the certificate chain:
each XML tag must be preceeded by the corresponding parent certificate tag.
The root certificate as very first cerificate in the chain should not be present in the XML file.

.. warning::
    Should the root Cert be in the XML?

.. note::
    As XML does not take whitespace into account, the newlines in the certificate body might or might not be present.
    In any case, these are not parsed in reading the XML file.
    As the content is base64-encoded, this is no problem but the parser must be aware of this.

.. note::
    Here is an example XML snippet of a certificate chain:

    .. code-block:: xml

        <x509-chain>
            <chain-link>
                AAABBBBDDDCCCC
            </chain-link>
            <chain-link>
                BBBCCCDDDEEEFF
            </chain-link>
        </x509-chain>
        
    .. warning::
        T.B.D

Signature of the hashes
-----------------------


.. warning:: How to handle shortened certificate chains?

    If the certificate chain contains more certificates (another root CA), should this be accepted or rejected?

Web of Trust (WoT)
==================

.. note:: T.B.D.


